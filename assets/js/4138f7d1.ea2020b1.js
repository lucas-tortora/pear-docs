"use strict";(globalThis.webpackChunkpear_docs_docusarus=globalThis.webpackChunkpear_docs_docusarus||[]).push([[1251],{8812:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","href":"/pear-docs/","label":"Pear by Holepunch","docId":"welcome-to-pear","unlisted":false},{"type":"category","label":"Getting Started","items":[{"type":"link","href":"/pear-docs/getting-started/install","label":"Install the Pear Runtime","docId":"getting-started/install","unlisted":false},{"type":"category","label":"Create a Terminal App","items":[{"type":"link","href":"/pear-docs/getting-started/terminal/setup","label":"Starting a Pear Terminal Project","docId":"getting-started/terminal/setup","unlisted":false},{"type":"link","href":"/pear-docs/getting-started/terminal/simple-chat-app","label":"Making a Pear Terminal Application","docId":"getting-started/terminal/simple-chat-app","unlisted":false},{"type":"link","href":"/pear-docs/getting-started/terminal/debug","label":"Debugging A Pear Terminal Application","docId":"getting-started/terminal/debug","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Create a Desktop App","items":[{"type":"link","href":"/pear-docs/getting-started/desktop/setup","label":"Making a Pear Desktop Application","docId":"getting-started/desktop/setup","unlisted":false},{"type":"link","href":"/pear-docs/getting-started/desktop/simple-chat-app","label":"Starting a Pear Desktop Project","docId":"getting-started/desktop/simple-chat-app","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","href":"/pear-docs/getting-started/release","label":"Releasing a Pear Application","docId":"getting-started/release","unlisted":false},{"type":"link","href":"/pear-docs/getting-started/share","label":"Sharing a Pear Application","docId":"getting-started/share","unlisted":false},{"type":"link","href":"/pear-docs/getting-started/best-practices","label":"Best Practices","docId":"getting-started/best-practices","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"How To","items":[{"type":"link","href":"/pear-docs/how-to/connect-two-pears-with-hyper-dht","label":"How to connect two Peers by key with Hyperdht","docId":"how-to/connect-two-pears-with-hyper-dht","unlisted":false},{"type":"link","href":"/pear-docs/how-to/connect-many-pears-with-hyper-swarm","label":"How to connect to many peers by topic with Hyperswarm","docId":"how-to/connect-many-pears-with-hyper-swarm","unlisted":false},{"type":"link","href":"/pear-docs/how-to/replicate-and-persist-with-hyper-core","label":"How to replicate and persist with Hypercore","docId":"how-to/replicate-and-persist-with-hyper-core","unlisted":false},{"type":"link","href":"/pear-docs/how-to/manage-multiple-hypercores-with-corestore","label":"How to work with many Hypercores using Corestore","docId":"how-to/manage-multiple-hypercores-with-corestore","unlisted":false},{"type":"link","href":"/pear-docs/how-to/create-a-full-peer-to-peer-filesystem-with-hyperdrive","label":"How to create a full peer-to-peer filesystem with Hyperdrive","docId":"how-to/create-a-full-peer-to-peer-filesystem-with-hyperdrive","unlisted":false},{"type":"link","href":"/pear-docs/how-to/create-a-bare-mobile-app","label":"Making a Bare Mobile Application","docId":"how-to/create-a-bare-mobile-app","unlisted":false},{"type":"link","href":"/pear-docs/how-to/migrate-from-pear-v1-to-v2","label":"Migration","docId":"how-to/migrate-from-pear-v1-to-v2","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"References","items":[{"type":"category","label":"Bare","items":[{"type":"link","href":"/pear-docs/references/bare/api","label":"API","docId":"references/bare/api","unlisted":false},{"type":"link","href":"/pear-docs/references/bare/bare-modules","label":"bare-module","docId":"references/bare/bare-modules","unlisted":false},{"type":"link","href":"/pear-docs/references/bare/nodejs-compatibility-with-bare","label":"Node.js Compatibility with Bare","docId":"references/bare/nodejs-compatibility-with-bare","unlisted":false},{"type":"link","href":"/pear-docs/references/bare/overview","label":"Bare","docId":"references/bare/overview","unlisted":false},{"type":"link","href":"/pear-docs/references/bare/troubleshooting","label":"Troubleshooting","docId":"references/bare/troubleshooting","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pear","items":[{"type":"link","href":"/pear-docs/references/pear/api","label":"Application Programming Interface (API)","docId":"references/pear/api","unlisted":false},{"type":"link","href":"/pear-docs/references/pear/cli","label":"Command Line Interface (CLI)","docId":"references/pear/cli","unlisted":false},{"type":"link","href":"/pear-docs/references/pear/configuration","label":"Configuration","docId":"references/pear/configuration","unlisted":false},{"type":"link","href":"/pear-docs/references/pear/node-compat","label":"Node.js Compatibility with Bare","docId":"references/pear/node-compat","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Building Blocks","items":[{"type":"link","href":"/pear-docs/references/helpers/compact-encoding","label":"Compact Encoding","docId":"references/helpers/compact-encoding","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/corestore","label":"Corestore","docId":"references/helpers/corestore","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/localdrive","label":"Localdrive","docId":"references/helpers/localdrive","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/mirrordrive","label":"MirrorDrive","docId":"references/helpers/mirrordrive","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/protomux","label":"Protomux","docId":"references/helpers/protomux","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/secretstream","label":"SecretStream","docId":"references/helpers/secretstream","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Helpers","items":[{"type":"link","href":"/pear-docs/references/helpers/compact-encoding","label":"Compact Encoding","docId":"references/helpers/compact-encoding","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/corestore","label":"Corestore","docId":"references/helpers/corestore","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/localdrive","label":"Localdrive","docId":"references/helpers/localdrive","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/mirrordrive","label":"MirrorDrive","docId":"references/helpers/mirrordrive","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/protomux","label":"Protomux","docId":"references/helpers/protomux","unlisted":false},{"type":"link","href":"/pear-docs/references/helpers/secretstream","label":"SecretStream","docId":"references/helpers/secretstream","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tools","items":[{"type":"link","href":"/pear-docs/references/tools/drives","label":"drives","docId":"references/tools/drives","unlisted":false},{"type":"link","href":"/pear-docs/references/tools/hyperbeam","label":"Hyperbeam","docId":"references/tools/hyperbeam","unlisted":false},{"type":"link","href":"/pear-docs/references/tools/hypershell","label":"Hypershell","docId":"references/tools/hypershell","unlisted":false},{"type":"link","href":"/pear-docs/references/tools/hyperssh","label":"Hyperssh","docId":"references/tools/hyperssh","unlisted":false},{"type":"link","href":"/pear-docs/references/tools/hypertele","label":"Hypertele","docId":"references/tools/hypertele","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"link","href":"/pear-docs/faq","label":"Frequently Asked Questions","docId":"faq","unlisted":false},{"type":"link","href":"/pear-docs/troubleshooting","label":"Troubleshooting","docId":"troubleshooting","unlisted":false}]},"docs":{"apps/keet":{"id":"apps/keet","title":"Keet.io","description":"Keet is a fully P2P communications tool that\'s built entirely on Holepunch. Give it a try!"},"examples/bare-on-mobile":{"id":"examples/bare-on-mobile","title":"Bare on Mobile","description":"Bare can be embedded into mobile applications to serve as the \\"Pear-end\\" where the peer-to-peer code of the application is run."},"examples/react-app-using-pear":{"id":"examples/react-app-using-pear","title":"Pear React Application","description":"The following is an example of a filesharing application built with the React framework using Pear."},"faq":{"id":"faq","title":"Frequently Asked Questions","description":"How Do I Get a List of Pear Applications I\'ve Installed?","sidebar":"tutorialSidebar"},"getting-started/best-practices":{"id":"getting-started/best-practices","title":"Best Practices","description":"This article covers useful patterns that one should follow in most cases when","sidebar":"tutorialSidebar"},"getting-started/desktop/setup":{"id":"getting-started/desktop/setup","title":"Making a Pear Desktop Application","description":"This guide demonstrates how to build a peer-to-peer chat application.","sidebar":"tutorialSidebar"},"getting-started/desktop/simple-chat-app":{"id":"getting-started/desktop/simple-chat-app","title":"Starting a Pear Desktop Project","description":"This section shows how to generate, configure, and develop a Pear desktop project, in preparation for Making a Pear Desktop Application.","sidebar":"tutorialSidebar"},"getting-started/install":{"id":"getting-started/install","title":"Install the Pear Runtime","description":"Pear Runtime can be installed via npm.","sidebar":"tutorialSidebar"},"getting-started/release":{"id":"getting-started/release","title":"Releasing a Pear Application","description":"Pear applications are stored in an append-only log (hypercore).","sidebar":"tutorialSidebar"},"getting-started/share":{"id":"getting-started/share","title":"Sharing a Pear Application","description":"Applications can be shared with peers by seeding them to the network from an efficient local data structure (a hypercore). We call the mirroring of a local file system into the Pear platform Application Storage \\"staging\\". Seeding is sharing an app from a machine over the Distributed Hash Table (DHT) (via hyperswarm) so that other peers can replicate, consume and reseed the application.","sidebar":"tutorialSidebar"},"getting-started/terminal/debug":{"id":"getting-started/terminal/debug","title":"Debugging A Pear Terminal Application","description":"Debugging Pear Terminal Applications is different than debugging Desktop Applications because they do not come with a UI. Instead a few steps are needed.","sidebar":"tutorialSidebar"},"getting-started/terminal/setup":{"id":"getting-started/terminal/setup","title":"Starting a Pear Terminal Project","description":"Step 1. Init","sidebar":"tutorialSidebar"},"getting-started/terminal/simple-chat-app":{"id":"getting-started/terminal/simple-chat-app","title":"Making a Pear Terminal Application","description":"This guide demonstrates how to build a peer-to-peer chat application.","sidebar":"tutorialSidebar"},"how-to/connect-many-pears-with-hyper-swarm":{"id":"how-to/connect-many-pears-with-hyper-swarm","title":"How to connect to many peers by topic with Hyperswarm","description":"In the former example, two peers connected directly using the first peer\'s public key. Hyperswarm helps to discover peers swarming a common topic, and connect to as many of them as possible. This will become clearer in the Hypercore example, but it\'s the best way to distribute peer-to-peer data structures.","sidebar":"tutorialSidebar"},"how-to/connect-two-pears-with-hyper-dht":{"id":"how-to/connect-two-pears-with-hyper-dht","title":"How to connect two Peers by key with Hyperdht","description":"HyperDHT helps clients connect to a server peer with a known public key. HyperDHT uses a series of holepunching techniques to establish direct connections between the peers, even if they\'re located on home networks with tricky NATs.","sidebar":"tutorialSidebar"},"how-to/create-a-bare-mobile-app":{"id":"how-to/create-a-bare-mobile-app","title":"Making a Bare Mobile Application","description":"This guide demonstrates how to build and run a mobile application using Bare and Expo.","sidebar":"tutorialSidebar"},"how-to/create-a-full-peer-to-peer-filesystem-with-hyperdrive":{"id":"how-to/create-a-full-peer-to-peer-filesystem-with-hyperdrive","title":"How to create a full peer-to-peer filesystem with Hyperdrive","description":"Hyperdrive is a secure, real-time distributed file system designed for easy peer-to-peer file sharing. In the same way that a Hyperbee is just a wrapper around a Hypercore, a Hyperdrive is a wrapper around two Hypercores: one is a Hyperbee index for storing file metadata, and the other is used to store file contents.","sidebar":"tutorialSidebar"},"how-to/creating-a-pear-init-template":{"id":"how-to/creating-a-pear-init-template","title":"Creating a Pear Init Template","description":"This guides describes how to create a pear init template which can be used to initialize a new Pear application."},"how-to/manage-multiple-hypercores-with-corestore":{"id":"how-to/manage-multiple-hypercores-with-corestore","title":"How to work with many Hypercores using Corestore","description":"An append-only log is powerful on its own, but it\'s most useful as a building block for constructing larger data structures, such as databases or filesystems. Building these data structures often requires many cores, each with different responsibilities. For example, Hyperdrive uses one core to store file metadata and another to store file contents.","sidebar":"tutorialSidebar"},"how-to/migrate-from-pear-v1-to-v2":{"id":"how-to/migrate-from-pear-v1-to-v2","title":"Migration","description":"Pear v2 introduces a breaking change to the application entrypoint and includes several API deprecations.","sidebar":"tutorialSidebar"},"how-to/replicate-and-persist-with-hyper-core":{"id":"how-to/replicate-and-persist-with-hyper-core","title":"How to replicate and persist with Hypercore","description":"In the HyperDHT How-to (Connect Two Peers) and the Hyperswarm How-to (Connect Many Peers), peers can exchange chat messages so long as both are online at the same time and directly connected. The application is ephemeral, the messages are not persisted - they will be lost if the recipient is offline. Hypercore provides the persistence.","sidebar":"tutorialSidebar"},"how-to/share-append-only-databases-with-hyperbee":{"id":"how-to/share-append-only-databases-with-hyperbee","title":"How to share Append-Only Databases with Hyperbee","description":"Hyperbee is an append-only B-tree based on Hypercore. It provides a key/value-store API with methods to insert and get key/value pairs, perform atomic batch insertions, and create sorted iterators."},"references/bare/api":{"id":"references/bare/api","title":"API","description":"This documentation serves as the comprehensive guide to the Bare API, the core JavaScript functionality offered by the Bare runtime environment.","sidebar":"tutorialSidebar"},"references/bare/bare-modules":{"id":"references/bare/bare-modules","title":"bare-module","description":"Module support for JavaScript.","sidebar":"tutorialSidebar"},"references/bare/nodejs-compatibility-with-bare":{"id":"references/bare/nodejs-compatibility-with-bare","title":"Node.js Compatibility with Bare","description":"Bare offers great compatibility with Node.js counterparts.","sidebar":"tutorialSidebar"},"references/bare/overview":{"id":"references/bare/overview","title":"Bare","description":"Small and modular JavaScript runtime for desktop and mobile. Like Node.js, it provides an asynchronous, event-driven architecture for writing applications in the lingua franca of modern software. Unlike Node.js, it makes embedding and cross-device support core use cases, aiming to run just as well on your phone as on your laptop. The result is a runtime ideal for networked, peer-to-peer applications that can run on a wide selection of hardware.","sidebar":"tutorialSidebar"},"references/bare/troubleshooting":{"id":"references/bare/troubleshooting","title":"Troubleshooting","description":"The article aims to help troubleshooting confusing scenarios while developing Bare applications.","sidebar":"tutorialSidebar"},"references/building-blocks/autobase":{"id":"references/building-blocks/autobase","title":"Autobase","description":"A multiwriter data structure for combining multiple writer cores into a view of the system. Using the event sourcing pattern, writers append blocks which are linearized into an eventually consistent order for building a view of the system, combining their inputs."},"references/building-blocks/hyperbee":{"id":"references/building-blocks/hyperbee","title":"Hyperbee","description":"Hyperbee is an append only B-tree based on Hypercore. It provides a key/value-store API, with methods for inserting and getting key-value pairs, atomic batch insertions, and creating sorted iterators. It uses a single Hypercore for storage, using a technique called embedded indexing. It provides features like cache warmup extension, efficient diffing, version control, sorted iteration, and sparse downloading."},"references/building-blocks/hypercore":{"id":"references/building-blocks/hypercore","title":"Hypercore","description":"Hypercore is a secure, distributed append-only log built for sharing large datasets and streams of real-time data. It comes with a secure transport protocol, making it easy to build fast and scalable peer-to-peer applications."},"references/building-blocks/hyperdht":{"id":"references/building-blocks/hyperdht","title":"HyperDHT","description":"The DHT powering Hyperswarm and built on top of dht-rpc. The HyperDHT uses a series of holepunching techniques to ensure connectivity works on most networks and is mainly used to facilitate finding and connecting to peers using end-to-end encrypted Noise streams."},"references/building-blocks/hyperdrive":{"id":"references/building-blocks/hyperdrive","title":"Hyperdrive","description":"Hyperdrive is a secure, real-time distributed file system designed for easy P2P file sharing. We use it extensively inside Holepunch; apps like Keet are distributed to users as Hyperdrives, as is the Holepunch platform itself."},"references/building-blocks/hyperswarm":{"id":"references/building-blocks/hyperswarm","title":"Hyperswarm","description":"Hyperswarm helps to find and connect to peers announcing a common \'topic\' that can be anything. Using Hyperswarm, discover and connect peers with a shared interest over a distributed network. For example, we often use Hypercore\'s discovery key as the swarm topic for discovering peers to replicate with."},"references/helpers/compact-encoding":{"id":"references/helpers/compact-encoding","title":"Compact Encoding","description":"A series of binary encoders/decoders for building small and fast parsers and serializers.","sidebar":"tutorialSidebar"},"references/helpers/corestore":{"id":"references/helpers/corestore","title":"Corestore","description":"stable","sidebar":"tutorialSidebar"},"references/helpers/localdrive":{"id":"references/helpers/localdrive","title":"Localdrive","description":"A file system API that is similar to Hyperdrive. This tool comes in handy when mirroring files from user filesystem to a drive, and vice-versa.","sidebar":"tutorialSidebar"},"references/helpers/mirrordrive":{"id":"references/helpers/mirrordrive","title":"MirrorDrive","description":"Mirrors a Hyperdrive or a LocalDrive into another one.","sidebar":"tutorialSidebar"},"references/helpers/protomux":{"id":"references/helpers/protomux","title":"Protomux","description":"Multiplex multiple message-oriented protocols over a stream","sidebar":"tutorialSidebar"},"references/helpers/secretstream":{"id":"references/helpers/secretstream","title":"SecretStream","description":"SecretStream is used to securely create connections between two peers in Hyperswarm. It is powered by Noise and libsodium\'s SecretStream. SecretStream can be used as a standalone module to provide encrypted communication between two parties.","sidebar":"tutorialSidebar"},"references/pear/api":{"id":"references/pear/api","title":"Application Programming Interface (API)","description":"experimental","sidebar":"tutorialSidebar"},"references/pear/cli":{"id":"references/pear/cli","title":"Command Line Interface (CLI)","description":"experimental","sidebar":"tutorialSidebar"},"references/pear/configuration":{"id":"references/pear/configuration","title":"Configuration","description":"experimental","sidebar":"tutorialSidebar"},"references/pear/node-compat":{"id":"references/pear/node-compat","title":"Node.js Compatibility with Bare","description":"Bare offers great compatibility with Node.js counterparts.","sidebar":"tutorialSidebar"},"references/tools/drives":{"id":"references/tools/drives","title":"drives","description":"CLI to download, seed, and mirror a Hyperdrive or Localdrive.","sidebar":"tutorialSidebar"},"references/tools/hyperbeam":{"id":"references/tools/hyperbeam","title":"Hyperbeam","description":"An end-to-end encrypted pipeline for the Internet, utilizing the Hyperswarm and Noise Protocol for secure communications.","sidebar":"tutorialSidebar"},"references/tools/hypershell":{"id":"references/tools/hypershell","title":"Hypershell","description":"A command-line interface for generating and connecting to peer-to-peer, end-to-end encrypted shells.","sidebar":"tutorialSidebar"},"references/tools/hyperssh":{"id":"references/tools/hyperssh","title":"Hyperssh","description":"A utility to facilitate SSH operations via the HyperDHT.","sidebar":"tutorialSidebar"},"references/tools/hypertele":{"id":"references/tools/hypertele","title":"Hypertele","description":"A swiss-knife proxy powered by HyperDHT!","sidebar":"tutorialSidebar"},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting","description":"Pear Applications","sidebar":"tutorialSidebar"},"welcome-to-pear":{"id":"welcome-to-pear","title":"Pear by Holepunch","description":"Pear loads applications remotely from peers and allows anyone to create and share applications with peers.","sidebar":"tutorialSidebar"}}}}')}}]);