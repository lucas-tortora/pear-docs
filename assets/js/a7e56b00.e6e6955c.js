"use strict";(globalThis.webpackChunkpear_docs_docusarus=globalThis.webpackChunkpear_docs_docusarus||[]).push([[4533],{2036:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"references/helpers/secretstream","title":"SecretStream","description":"SecretStream is used to securely create connections between two peers in Hyperswarm. It is powered by Noise and libsodium\'s SecretStream. SecretStream can be used as a standalone module to provide encrypted communication between two parties.","source":"@site/docs/references/helpers/secretstream.md","sourceDirName":"references/helpers","slug":"/references/helpers/secretstream","permalink":"/pear-docs/references/helpers/secretstream","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/references/helpers/secretstream.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Protomux","permalink":"/pear-docs/references/helpers/protomux"},"next":{"title":"Compact Encoding","permalink":"/pear-docs/references/helpers/compact-encoding"}}');var n=r(4848),c=r(8453);const i={},a="SecretStream",d={},l=[{value:"Installation",id:"installation",level:3},{value:"API",id:"api",level:3},{value:"<strong><code>const s = new SecretStream(isInitiator, [rawStream], [options])</code></strong>",id:"secretstream.new",level:4},{value:"Properties",id:"properties",level:4},{value:"<strong><code>s.publicKey</code></strong>",id:"secretstream.publicKey",level:4},{value:"<strong><code>s.remotePublicKey</code></strong>",id:"secretstream.remotepublickey",level:4},{value:"<strong><code>s.handshakeHash</code></strong>",id:"secretstream.handshakehash",level:4},{value:"Methods",id:"methods",level:4},{value:"<strong><code>s.start(rawStream, [options])</code></strong>",id:"secretstream.start",level:4},{value:"<strong><code>s.setTimeout(ms)</code></strong>",id:"secretstream.settimeout",level:4},{value:"<strong><code>s.setKeepAlive(ms)</code></strong>",id:"secretstream.keepalive",level:4},{value:"<strong><code>const keyPair = SecretStream.keyPair([seed])</code></strong>",id:"secretstream.keypair",level:4},{value:"Events",id:"events",level:4},{value:"<strong><code>s.on(&#39;connect&#39;, onConnectHandler)</code></strong>",id:"secretstream.onconnect",level:4}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"secretstream",children:"SecretStream"})}),"\n",(0,n.jsx)(s.p,{children:"SecretStream is used to securely create connections between two peers in Hyperswarm. It is powered by Noise and libsodium's SecretStream. SecretStream can be used as a standalone module to provide encrypted communication between two parties."}),"\n",(0,n.jsx)(s.p,{children:"The SecretStream instance is a Duplex stream that supports usability as a normal stream for standard read/write operations. Furthermore, its payloads are encrypted with libsodium's SecretStream for secure transmission."}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://github.com/holepunchto/hyperswarm-secret-stream",children:"GitHub (SecretStream)"})}),"\n"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#installation",children:(0,n.jsx)(s.code,{children:"SecretStream"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.new",children:(0,n.jsx)(s.code,{children:"Create a new instance"})})}),"\n",(0,n.jsxs)(s.li,{children:["Basic:","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Properties:","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.publickey",children:(0,n.jsx)(s.code,{children:"s.publicKey"})})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.remotepublickey",children:(0,n.jsx)(s.code,{children:"s.remotePublicKey"})})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.handshakehash",children:(0,n.jsx)(s.code,{children:"s.handshakeHash"})})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["Methods:","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.startrawstream",children:(0,n.jsx)(s.code,{children:"s.start(rawStream, \\[options\\])"})})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.settimeout",children:(0,n.jsx)(s.code,{children:"s.setTimeout(ms)"})})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.setkeepalive",children:(0,n.jsx)(s.code,{children:"s.setKeepAlive(ms)"})})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.keypair",children:(0,n.jsx)(s.code,{children:"SecretStream.keyPair(\\[seed\\])"})})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["Events:","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/pear-docs/references/helpers/secretstream#secretstream.onconnect",children:(0,n.jsx)(s.code,{children:"connect"})})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsxs)(s.p,{children:["Install with ",(0,n.jsx)(s.a,{href:"https://www.npmjs.com/",children:"npm"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"npm install @hyperswarm/secret-stream\n"})}),"\n",(0,n.jsx)(s.h3,{id:"api",children:"API"}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.new",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"const s = new SecretStream(isInitiator, [rawStream], [options])"})})}),"\n",(0,n.jsx)(s.p,{children:"Makes a new stream."}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"isInitiator"})," is a boolean indicating whether the process is a client or the server."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"rawStream"})," can be set to an underlying transport stream to run the noise stream over."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"options"})," include:"]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{style:{textAlign:"center"},children:"Property"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Type"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"center"},children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"pattern"})})}),(0,n.jsx)(s.td,{children:"Accept server connections for this topic by announcing it to the DHT"}),(0,n.jsx)(s.td,{children:"String"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"center"},children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"remotePublicKey"})})}),(0,n.jsx)(s.td,{children:"PublicKey of the other party"}),(0,n.jsx)(s.td,{children:"String"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"center"},children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"keyPair"})})}),(0,n.jsx)(s.td,{children:"Combination of PublicKey and SecretKey"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"{ publicKey, secretKey }"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"center"},children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"handshake"})})}),(0,n.jsx)(s.td,{children:"To use a handshake performed elsewhere, pass it here"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"{ tx, rx, handshakeHash, publicKey, remotePublicKey }"})})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"The SecretStream returned is a Duplex stream to write data to and read data from, it's a normal stream with payloads that are encrypted using the libsodium secretstream."}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"By default, the above process uses ed25519 for the handshakes."}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["To load the key pair asynchronously, the secret stream also supports passing in a promise instead of the keypair that later resolves to ",(0,n.jsx)(s.code,{children:"{ publicKey, secretKey }"}),". The stream lifecycle will wait for the resolution and auto-destroy the stream if the promise gives an error."]}),"\n",(0,n.jsx)(s.h4,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.publicKey",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"s.publicKey"})})}),"\n",(0,n.jsx)(s.p,{children:"Gets the local public key."}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.remotepublickey",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"s.remotePublicKey"})})}),"\n",(0,n.jsxs)(s.p,{children:["Gets the remote's public key. Populated after ",(0,n.jsx)(s.code,{children:"open"})," is emitted."]}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.handshakehash",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"s.handshakeHash"})})}),"\n",(0,n.jsxs)(s.p,{children:["Gets the unique hash of this handshake. Populated after ",(0,n.jsx)(s.code,{children:"open"})," is emitted."]}),"\n",(0,n.jsx)(s.h4,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.start",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"s.start(rawStream, [options])"})})}),"\n",(0,n.jsx)(s.p,{children:"Starts a SecretStream from a rawStream asynchronously."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-javascript",children:"const s = new SecretStream({\n  autoStart: false // call start manually\n})\n\n// ... do async stuff or destroy the stream\n\ns.start(rawStream, {\n  ... options from above\n})\n"})}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.settimeout",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"s.setTimeout(ms)"})})}),"\n",(0,n.jsxs)(s.p,{children:["Sets the stream timeout. If no data is received within a ",(0,n.jsx)(s.code,{children:"ms"})," window, the stream is auto-destroyed."]}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.keepalive",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"s.setKeepAlive(ms)"})})}),"\n",(0,n.jsxs)(s.p,{children:["Sends a heartbeat (empty message) every time the socket is idle for ",(0,n.jsx)(s.code,{children:"ms"})," milliseconds."]}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.keypair",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"const keyPair = SecretStream.keyPair([seed])"})})}),"\n",(0,n.jsx)(s.p,{children:"Generates an ed25519 key pair."}),"\n",(0,n.jsx)(s.h4,{id:"events",children:"Events"}),"\n",(0,n.jsx)(s.h4,{id:"secretstream.onconnect",children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"s.on('connect', onConnectHandler)"})})}),"\n",(0,n.jsx)(s.p,{children:"Emitted when the handshake is fully done. It is safe to write to the stream immediately though, as data is buffered internally before the handshake has been completed."})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>a});var t=r(6540);const n={},c=t.createContext(n);function i(e){const s=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(c.Provider,{value:s},e.children)}}}]);