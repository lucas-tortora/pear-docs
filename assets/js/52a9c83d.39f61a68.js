"use strict";(globalThis.webpackChunkpear_docs_docusarus=globalThis.webpackChunkpear_docs_docusarus||[]).push([[8808],{647:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"how-to/creating-a-pear-init-template","title":"Creating a Pear Init Template","description":"This guides describes how to create a pear init template which can be used to initialize a new Pear application.","source":"@site/docs/how-to/creating-a-pear-init-template.md","sourceDirName":"how-to","slug":"/how-to/creating-a-pear-init-template","permalink":"/pear-docs/how-to/creating-a-pear-init-template","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to/creating-a-pear-init-template.md","tags":[],"version":"current","frontMatter":{}}');var a=t(4848),r=t(8453);const l={},s="Creating a Pear Init Template",d={},o=[{value:"Folder Structure",id:"folder-structure",level:2},{value:"Template Structure",id:"template-structure",level:2},{value:"Parameter Object",id:"parameter-object",level:3},{value:"Required Fields",id:"required-fields",level:3},{value:"Optional Fields",id:"optional-fields",level:3},{value:"Example",id:"example",level:3},{value:"App Content",id:"app-content",level:2},{value:"Config file",id:"config-file",level:2},{value:"Initializing a new project",id:"initializing-a-new-project",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"creating-a-pear-init-template",children:"Creating a Pear Init Template"})}),"\n",(0,a.jsxs)(n.p,{children:["This guides describes how to create a ",(0,a.jsx)(n.a,{href:"../reference/pear/cli.md#pear-init-flags-linktypedesktop-dir",children:(0,a.jsx)(n.code,{children:"pear init"})})," template which can be used to initialize a new Pear application."]}),"\n",(0,a.jsx)(n.h2,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,a.jsxs)(n.p,{children:["A template can be initialized from a local directory or P2P (Peer-to-Peer) using a ",(0,a.jsx)(n.code,{children:"pear://"})," link."]}),"\n",(0,a.jsx)(n.p,{children:"A template folder should contain :"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["a ",(0,a.jsx)(n.code,{children:"_template.json"})," file which describes the prompt structure."]}),"\n",(0,a.jsxs)(n.li,{children:["a ",(0,a.jsx)(n.code,{children:"package.json"})," file which contains config parameters to be populated from the prompts."]}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Note that optionally, if the ",(0,a.jsx)(n.code,{children:"package.json"})," of the parent contains a ",(0,a.jsx)(n.code,{children:"main"})," field it should specify a ",(0,a.jsx)(n.code,{children:"__main__"})," file and a ",(0,a.jsx)(n.code,{children:"main"})," parameter in the ",(0,a.jsx)(n.code,{children:"_template.json"})," file."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Create a template folder called ",(0,a.jsx)(n.code,{children:"example"})," in the project directory, inside the folder create the new files."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir example\ncd example\ntouch index.html package.json _template.json\n"})}),"\n",(0,a.jsx)(n.h2,{id:"template-structure",children:"Template Structure"}),"\n",(0,a.jsxs)(n.p,{children:["Let's define the prompt structure in ",(0,a.jsx)(n.code,{children:"_template.json"})]}),"\n",(0,a.jsx)(n.h3,{id:"parameter-object",children:"Parameter Object"}),"\n",(0,a.jsxs)(n.p,{children:["Each parameter object in the ",(0,a.jsx)(n.code,{children:"params"})," array defines a specific input parameter."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "params": [\n      {\n        "name": "name",\n        "prompt": "name"\n      }\n    // parameter objects....\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Here are the possible fields for a parameter object:"}),"\n",(0,a.jsx)(n.h3,{id:"required-fields",children:"Required Fields"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"name"})," (string): The identifier for the parameter. This should be unique within the template."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"prompt"})," (string): The text prompt that will be displayed to the user when asking for input for this parameter."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"optional-fields",children:"Optional Fields"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"default"})," (any): The default value for the parameter if no input is provided."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"validation"})," (string): A JavaScript function as a string that validates the input. It should return ",(0,a.jsx)(n.code,{children:"true"})," for valid input and ",(0,a.jsx)(n.code,{children:"false"})," for invalid input."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"msg"})," (string): An error message to display if the validation fails."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.p,{children:"Here's an example of a complete parameter object:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "name": "main",\n  "default": "index.html",\n  "prompt": "Enter the main HTML file name",\n  "validation": "(value) => value.endsWith(\'.html\')",\n  "msg": "must have an .html file extension"\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"This parameter:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:'Has the name "main"'}),"\n",(0,a.jsx)(n.li,{children:'Defaults to "index.html" if no input is provided'}),"\n",(0,a.jsx)(n.li,{children:"Prompts the user to enter the main HTML file name"}),"\n",(0,a.jsx)(n.li,{children:'Validates that the input ends with ".html"'}),"\n",(0,a.jsx)(n.li,{children:"Displays an error message if the validation fails"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Replace the contents of ",(0,a.jsx)(n.code,{children:"_template.json"})," with"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "params": [\n    {\n      "name": "name",\n      "prompt": "name"\n    },\n    {\n      "name": "main",\n      "default": "index.html",\n      "prompt": "main",\n      "validation": "(value) => value.endsWith(\'.html\')",\n      "msg": "must have an .html file extension"\n    },\n    {\n      "name": "height",\n      "validation": "(value) => Number.isInteger(+value)",\n      "prompt": "height",\n      "msg": "must be an integer"\n    },\n    {\n      "name": "width",\n      "validation": "(value) => Number.isInteger(+value)",\n      "prompt": "width",\n      "msg": "must be an integer"\n    },\n    {\n      "name": "license",\n      "default": "Apache-2.0",\n      "prompt": "license"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"app-content",children:"App Content"}),"\n",(0,a.jsxs)(n.p,{children:["Replace the contents of ",(0,a.jsx)(n.code,{children:"index.html"})," file with :"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body > h1:nth-of-type(1) {\n      cursor: pointer\n    }\n\n    body {\n      --title-bar-height: 42px;\n      padding-top: var(--title-bar-height);\n      background-color: #001601;\n      font-family: monospace;\n    }\n\n    h1 {\n      color: antiquewhite;\n    }\n\n    #bar {\n      background: rgba(55, 60, 72, 0.6);\n      backdrop-filter: blur(64px);\n      -webkit-app-region: drag;\n      height: var(--title-bar-height);\n      padding: 0;\n      border-top-left-radius: 8px;\n      border-top-right-radius: 8px;\n      color: #FFF;\n      white-space: nowrap;\n      box-sizing: border-box;\n      position: fixed;\n      z-index: 2;\n      width: 100%;\n      left: 0;\n      top: 0;\n    }\n\n    pear-ctrl[data-platform=darwin] {\n      margin-top: 18px;\n      margin-left: 12px;\n    }\n  </style>\n</head>\n<body>\n  <div id="bar"><pear-ctrl></pear-ctrl></div>\n  <h1>Initialized from a Pear Template</h1>\n</body>\n</html>\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Temporarily set the contents of ",(0,a.jsx)(n.code,{children:"package.json"})," to:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "pear": {\n    "name": "pear-init-template-tutorial",\n    "type": "desktop"\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["This is the minimal requirements for a Pear Application ",(0,a.jsx)(n.code,{children:"package.json"})," to run.\nThis will allow us to test the template's ",(0,a.jsx)(n.code,{children:"index.html"})," as a pear desktop\napp."]}),"\n",(0,a.jsx)(n.p,{children:"Run the application using:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pear run --dev .\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Layout of the app",src:t(4925).A+"",width:"1824",height:"1424"})}),"\n",(0,a.jsx)(n.h2,{id:"config-file",children:"Config file"}),"\n",(0,a.jsxs)(n.p,{children:["Replace the contents of ",(0,a.jsx)(n.code,{children:"package.json"})," with :"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "name": "__name__",\n  "pear": {\n    "name": "__name__",\n    "type": "desktop",\n    "gui": {\n      "backgroundColor": "#1F2430",\n      "height": "__height__",\n      "width": "__width__"\n    }\n  },\n  "type": "module",\n  "license": "__license__",\n  "scripts": {\n    "dev": "pear run -d .",\n    "test": "brittle test/*.test.js"\n  },\n  "devDependencies": {\n    "brittle": "^3.0.0",\n    "pear-interface": "^1.0.0"\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Note that any field that is supposed to be populated from the prompts has the value surrounded by double underscores i.e ",(0,a.jsx)(n.code,{children:"__fieldName__"})]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"initializing-a-new-project",children:"Initializing a new project"}),"\n",(0,a.jsxs)(n.p,{children:["Go to a new project directory and use ",(0,a.jsx)(n.code,{children:"pear init"})," to initialize from the created template."]}),"\n",(0,a.jsx)(n.p,{children:"Run the following command :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pear init [dir]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Here replace ",(0,a.jsx)(n.code,{children:"[dir]"})," with the local template directory path. This can also be a ",(0,a.jsx)(n.code,{children:"pear://"})," link."]}),"\n",(0,a.jsx)(n.p,{children:"This should now initialize a new Pear project from the created template."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},4925:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/pear-init-16c7191fce6201435260d841b0b7cfde.png"},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var i=t(6540);const a={},r=i.createContext(a);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);